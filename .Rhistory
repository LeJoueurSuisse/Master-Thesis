# Monthly consumption top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(consumption)) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly consumption per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly consumption top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly consumption per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly production top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly production per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly consumption top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly consumption per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly production top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly production per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
source(file = here::here("Scripts/SetUp.R"))
data_files <- list.files(here::here("Data/SwissGrid"))
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("~/GitHub/Master-Thesis/Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:(length(data_files)-2)){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = ymd_hms(Timestamp), .before = 1) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
data_all <- rbind(Data_2015, Data_2016, Data_2017, Data_2018, Data_2019,
Data_2020, Data_2021, Data_2022) %>% clean_names() %>%
mutate(day_time = ifelse(hour > "07:00:00" & hour <= "19:00:00",
"Day", "Night")) %>%
mutate(month = month(ymd(month), label = TRUE)) %>%
mutate(hour = hour(hms(hour))) %>%
mutate(wday = wday(date, label = TRUE, week_start = 1)) %>%
mutate(year = year(date)) %>%
mutate(hourly = format(as.POSIXlt(time), "%Y-%m-%d %H:00:00")) %>%
mutate(hourly = ymd_hms(hourly))%>%
relocate(c(hourly, year, month, date, wday, hour, day_time), .after = time)
my_variables <- colnames(data_all) # all the variable
times_var <- c(my_variables[1:8]) # time variable only
general_var <- my_variables[c(1:11, 14:17)] # general statistics
border_var <- my_variables[c(1:8, 18:28)] # exchange with borders statistics
price_var <- my_variables[c(1:8, 29:32)] # price of control
canton_var <- my_variables[c(1:8, 33:70)] # prod and cons per cantons
foreign_var <- my_variables[c(1:8, 71:72)] # out of Switzerland manage by SwissGrid
general_df <- data_all %>% select(all_of(general_var)) %>%
rename(end_users_cons = total_energy_consumed_by_end_users_in_the_swiss_controlblock_k_wh,
energy_prod = total_energy_production_swiss_controlblock_k_wh,
energy_cons = total_energy_consumption_swiss_controlblock_k_wh,
pos_second = positive_secundary_control_energy_k_wh,
neg_second = negative_secundary_control_energy_k_wh,
pos_tertiary = positive_tertiary_control_energy_k_wh,
neg_tertiary = negative_tertiary_control_energy_k_wh)
general_dfM <- general_df %>%
mutate(month = yearmonth(date), year = year(date)) %>%
as_tibble()
canton_df <- data_all %>% select(all_of(canton_var))
canton_prod <- canton_df[, -45] %>%
select(all_of(times_var), starts_with("prod"))
colnames(canton_prod) <- c(times_var, "argovie", "fribourg", "glaris", "grisons",
"lucerne", "neuchatel", "soleure", "saint_gall", "tessin",
"thurgovie", "valais", "appenzell", "bale", "berne_jura",
"schwytz_zoug", "obwald_nidwald_uri", "geneve_vaud",
"schaffhouse_zurich")
canton_long_prod <- canton_prod %>%
pivot_longer(-c(canton_var[1:8]), names_to = "Cantons", values_to = "production")
canton_cons <- canton_df[, -46] %>%
select(all_of(times_var), starts_with("cons"))
colnames(canton_cons) <- c(times_var, "argovie", "fribourg", "glaris", "grisons",
"lucerne", "neuchatel", "soleure", "saint_gall", "tessin",
"thurgovie", "valais", "appenzell", "bale", "berne_jura",
"schwytz_zoug", "obwald_nidwald_uri", "geneve_vaud",
"schaffhouse_zurich")
canton_long_cons <- canton_cons %>%
pivot_longer(-c(canton_var[1:8]), names_to = "Cantons", values_to = "consumption")
canton_df_long <- canton_long_prod %>%
mutate(consumption = canton_long_cons$consumption)
# Top consumer
top3_consumer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_cons = sum(consumption)) %>%
arrange(desc(Total_cons)) %>%
slice(1:3)
top3_consumer <- top3_consumer$Cantons
# Top producer
top3_producer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_prod = sum(production)) %>%
arrange(desc(Total_prod)) %>%
slice(1:3)
top3_producer <- top3_producer$Cantons
foreign_df <- data_all %>% select(all_of(foreign_var))
border_df <- data_all %>% select(all_of(border_var))
price_df <- data_all %>% select(all_of(price_var))
## Daily data for consumption
STL_dcmpC <- general_df %>%
group_by(date) %>% summarize(Total_cons = sum(energy_cons)/1000000) %>%
as_tsibble() %>%
filter_index("2018-01-01" ~ "2022-11-01") %>%
model(STL(Total_cons))
# 1 year only
STL_dcmpC_1year <- general_df %>%
group_by(date) %>% summarize(Total_cons = sum(energy_cons)/1000000) %>%
as_tsibble() %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_cons))
STL_dcmpP <- general_df %>%
group_by(date) %>% summarize(Total_cons = sum(energy_prod)/1000000) %>%
as_tsibble() %>%
filter_index("2018-01-01" ~ "2022-11-01") %>%
model(STL(Total_cons))
# 1 year only
STL_dcmpP_1year <- general_df %>%
group_by(date) %>% summarize(Total_cons = sum(energy_prod)/1000000) %>%
as_tsibble() %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_cons))
STL_dcmp_MC <- general_dfM %>%
group_by(month) %>% summarize(Total_cons = sum(energy_cons)/1000000) %>%
as_tsibble() %>%
filter_index(. ~ "2022-11-01") %>%
model(STL(Total_cons))
STL_dcmp_MP <- general_dfM %>%
group_by(month) %>% summarize(Total_cons = sum(energy_prod)/1000000) %>%
as_tsibble() %>%
filter_index(. ~ "2022-11-01") %>%
model(STL(Total_cons))
STL_dcmp_PS <- general_df %>%
group_by(date) %>% summarize(Total_pos = sum(pos_second)/1000) %>%
as_tsibble() %>%
filter_index("2019-01-01" ~ "2022-11-01") %>%
model(STL(Total_pos))
STL_dcmp_NS <- general_df %>%
group_by(date) %>% summarize(Total_neg = sum(neg_second)/1000) %>%
as_tsibble() %>%
filter_index("2019-01-01" ~ "2022-11-01") %>%
model(STL(Total_neg))
# Tertiary data for consumption & production
STL_dcmp_PT <- general_df %>%
group_by(date) %>% summarize(Total_pos = sum(pos_tertiary)/1000) %>%
as_tsibble() %>%
filter_index("2019-01-01" ~ "2022-11-01") %>%
model(STL(Total_pos))
STL_dcmp_NT <- general_df %>%
group_by(date) %>% summarize(Total_neg = sum(neg_tertiary)/1000) %>%
as_tsibble() %>%
filter_index("2019-01-01" ~ "2022-11-01") %>%
model(STL(Total_neg))
Data_to_remove <- c("canton_df", "canton_long_cons", "canton_long_prod",
"canton_cons", "canton_prod")
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
# Data_to_remove <- append(Data_to_remove, paste0("OldData_", 2008 + i))
}
# Top consumer
top3_consumer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_cons = sum(consumption)) %>%
arrange(desc(Total_cons)) %>%
slice(1:3)
top3_consumer <- top3_consumer$Cantons
# Top producer
top3_producer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_prod = sum(production)) %>%
arrange(desc(Total_prod)) %>%
slice(1:3)
top3_producer <- top3_producer$Cantons
# Top consumer
top3_consumer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_cons = sum(consumption)) %>%
arrange(desc(Total_cons)) %>%
slice(1:3)
top3_consumer <- top3_consumer$Cantons
Data_to_remove <- c("canton_df", "canton_long_cons", "canton_long_prod",
"canton_cons", "canton_prod")
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
# Data_to_remove <- append(Data_to_remove, paste0("OldData_", 2008 + i))
}
remove(list = c(Data_to_remove, "data_all"))
# List all the objects in the environment
remove(list = ls.str(mode = "character"))
remove(list = ls.str(mode = "numeric"))
# List all the objects in the environment
remove(list = setdiff(ls.str(mode = "character"), c("top3_producer", "top3_consumer")))
# Top consumer
top3_consumer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_cons = sum(consumption)) %>%
arrange(desc(Total_cons)) %>%
slice(1:3)
top3_consumer <- top3_consumer$Cantons
# Top producer
top3_producer <- canton_df_long %>%
group_by(Cantons) %>%
summarize(Total_prod = sum(production)) %>%
arrange(desc(Total_prod)) %>%
slice(1:3)
top3_producer <- top3_producer$Cantons
# List all the objects in the environment
remove(list = setdiff(ls.str(mode = "character"), c("top3_producer", "top3_consumer")))
remove(list = ls.str(mode = "numeric"))
# Monthly consumption top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly consumption per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly production top 3
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
ggtitle("Monthly production per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Consumption
canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
facet_wrap(~Cantons) +
ggtitle("Monthly consumption per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Production
canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
facet_wrap(~Cantons) +
ggtitle("Monthly production per canton since 2018") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly consumption with free scale
canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
facet_wrap(~Cantons, scales = "free") +
ggtitle("Monthly consumption per canton since 2018 free scale") +
ylab("Ammount in million of kWh") + xlab("Date")
# Monthly production with free scale
canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
autoplot() +
facet_wrap(~Cantons, scales = "free") +
ggtitle("Monthly production per canton since 2018 free scale") +
ylab("Ammount in million of kWh") + xlab("Date")
# Daily consumption for 2019
canton_df_long %>%
filter(Cantons == top3_consumer) %>%
group_by(date, Cantons) %>%
summarize(Total_cons = sum(consumption)) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_cons)) %>%
components() %>% autoplot()
# Daily production for 2019
canton_df_long %>%
filter(Cantons == top3_producer) %>%
group_by(date, Cantons) %>%
summarize(Total_prod = sum(production)) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_prod)) %>%
components() %>% autoplot()
# Daily consumption for 2019
canton_df_long %>%
filter(Cantons %in% top3_consumer) %>%
group_by(date, Cantons) %>%
summarize(Total_cons = sum(consumption)) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_cons)) %>%
components() %>% autoplot()
# Daily production for 2019
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
group_by(date, Cantons) %>%
summarize(Total_prod = sum(production)) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_prod)) %>%
components() %>% autoplot()
# Daily consumption for 2019
canton_df_long %>%
filter(Cantons %in% top3_consumer) %>%
group_by(date, Cantons) %>%
summarize(Total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_cons)) %>%
components() %>% autoplot()
# Daily production for 2019
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
group_by(date, Cantons) %>%
summarize(Total_prod = sum(production)/1000000) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_prod)) %>%
components() %>% autoplot()
# Monthly consumption
canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
model(STL(total_cons))%>%
components() %>% autoplot()
# Monthly production
canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_prod = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
model(STL(total_prod))%>%
components() %>% autoplot()
# Daily consumption for 2019
canton_df_long %>%
filter(Cantons %in% top3_consumer) %>%
group_by(date, Cantons) %>%
summarize(Total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = date, key = Cantons) %>%
filter_index("2019-01-01" ~ "2019-12-31") %>%
model(STL(Total_cons)) %>%
components() %>% autoplot()
# Monthly consumption
canton_df_long %>%
filter(Cantons %in% top3_consumer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
model(STL(total_cons))%>%
components() %>% autoplot()
# Monthly production
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_prod = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
model(STL(total_prod))%>%
components() %>% autoplot()
canton_features <- canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
features(total_cons, feat_stl)
## Features analysis
canton_features %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
# Monthly consumption
canton_df_long %>%
filter(Cantons %in% top3_consumer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
model(STL(total_cons))%>%
components() %>% autoplot()
# Monthly production
canton_df_long %>%
filter(Cantons %in% top3_producer) %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_prod = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
filter_index("2018-01-01" ~ "2022-11-30") %>%
model(STL(total_prod))%>%
components() %>% autoplot()
View(canton_features)
## Features analysis
canton_features %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
canton_features_C <- canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_cons = sum(consumption)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
features(total_cons, feat_stl)
canton_features_P <- canton_df_long %>%
mutate(month = yearmonth(date), year = year(date)) %>%
group_by(month, Cantons) %>%
summarize(total_prod = sum(production)/1000000) %>%
as_tsibble(index = month, key = Cantons) %>%
features(total_prod, feat_stl)
## Features analysis
canton_features_C %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
canton_features_P %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
## Features analysis
canton_features_C %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
canton_features_P %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
## Features analysis
canton_features_C %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
canton_features_P %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2)
source(here::here("Scripts/SetUp.R"))
source(file = here::here("Scripts/Cleaning_and_Wrangling.R"))
## Features analysis
canton_features_C %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2) +
labs(title = "Features analysis for consumption",
y = "seasonality", x = "trend")+
guides(col = guide_legend(nrow = 9))
canton_features_P %>%
ggplot(aes(x = trend_strength, y = seasonal_strength_year, col = Cantons)) +
geom_point(size = 2) +
labs(title = "Features analysis for produciton",
y = "seasonality", x = "trend") +
guides(col = guide_legend(nrow = 9))
View(canton_features_C)
View(canton_features_P)
source(here::here("Scripts/SetUp.R"))
source(file = here::here("Scripts/Cleaning_and_Wrangling.R"))
