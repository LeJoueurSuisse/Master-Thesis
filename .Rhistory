assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " "))
Data_2021 <- Data_2021 %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(month = as.Date(cut(Date, breaks = "months")),
year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Month, Year), .after = Time)
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " "))
Data_2021 <- Data_2021 %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(month = as.Date(cut(Date, breaks = "months")),
year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Month, Year), .after = Time)
}
data_files <- list.files(here::here("Data/SwissGrid"))
for(i in 1:6){
assign(paste0("OldData_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
Data_2021 <- Data_2021 %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(month = as.Date(cut(Date, breaks = "months")),
year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Month, Year), .after = Time)
View(Data_2021)
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " "))
}
View(Data_2021)
Data_2021 <- Data_2021 %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(month = as.Date(cut(Date, breaks = "months")),
year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Month, Year), .after = Time)
Data_2021 <- Data_2021 %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Month, Year), .after = Time)
data_files <- list.files(here::here("Data/SwissGrid"))
for(i in 1:6){
assign(paste0("OldData_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ")) %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time)
}
View(Data_2021)
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ")) %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time)
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ")) %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time)
}
View(Data_2021)
for(i in 13:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " "))
}
View(Data_2021)
Data_2021 <- Data_2021 %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time)
for(i in 13:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ")) %>%
mutate(test = 10)
}
View(Data_2021)
for(i in 13:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 13:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time, test = 10) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
View(Data_2021)
for(i in 1:6){
assign(paste0("OldData_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:(length(data_files)-2)){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = ymd_hms(Timestamp), .before = 1) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
source(file = here::here("Scripts/SetUp.R"))
data_files <- list.files(here::here("Data/SwissGrid"))
for(i in 1:6){
assign(paste0("OldData_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:(length(data_files)-2)){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = ymd_hms(Timestamp), .before = 1) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
data_all <- rbind(Data_2015, Data_2016, Data_2017, Data_2018, Data_2019,
Data_2020, Data_2021, Data_2022) %>% clean_names()
View(data_all)
my_variables <- colnames(data_all) # all the variable
general_var <- my_variables[1:13] # general statistics (prod, cons, flow)
border_var <- my_variables[c(1:4, 14:24)] # exchange with borders statistics
price_var <- my_variables[c(1:4, 25:28)] # price of control
canton_var <- my_variables[c(1:4, 29:66)] # prod and cons per cantons
foreign_var <- my_variables[c(1:4, 67:68)] # out of Switzerland manage by SwissGrid
general_df <- data_all %>% select(all_of(general_var)) %>%
rename(end_users_cons = total_energy_consumed_by_end_users_in_the_swiss_controlblock_k_wh,
energy_prod = total_energy_production_swiss_controlblock_k_wh,
energy_cons = total_energy_consumption_swiss_controlblock_k_wh,
net_outflow = net_outflow_of_the_swiss_transmission_grid_k_wh,
grid_feed_in = grid_feed_in_swiss_transmission_grid_k_wh,
pos_secund = positive_secundary_control_energy_k_wh,
neg_secund = negative_secundary_control_energy_k_wh,
pos_tertiary = positive_tertiary_control_energy_k_wh,
neg_tertiary = negative_tertiary_control_energy_k_wh)
View(data_all)
my_variables <- colnames(data_all) # all the variable
general_var <- my_variables[1:14] # general statistics (prod, cons, flow)
border_var <- my_variables[c(1:5, 15:25)] # exchange with borders statistics
price_var <- my_variables[c(1:5, 26:29)] # price of control
canton_var <- my_variables[c(1:5, 30:67)] # prod and cons per cantons
foreign_var <- my_variables[c(1:5, 68:69)] # out of Switzerland manage by SwissGrid
general_df <- data_all %>% select(all_of(general_var)) %>%
rename(end_users_cons = total_energy_consumed_by_end_users_in_the_swiss_controlblock_k_wh,
energy_prod = total_energy_production_swiss_controlblock_k_wh,
energy_cons = total_energy_consumption_swiss_controlblock_k_wh,
net_outflow = net_outflow_of_the_swiss_transmission_grid_k_wh,
grid_feed_in = grid_feed_in_swiss_transmission_grid_k_wh,
pos_secund = positive_secundary_control_energy_k_wh,
neg_secund = negative_secundary_control_energy_k_wh,
pos_tertiary = positive_tertiary_control_energy_k_wh,
neg_tertiary = negative_tertiary_control_energy_k_wh)
border_df <- data_all %>% select(all_of(border_var))
price_df <- data_all %>% select(all_of(price_var))
canton_df <- data_all %>% select(all_of(canton_var))
foreign_df <- data_all %>% select(all_of(foreign_var))
general_df <- data_all %>% select(all_of(general_var)) %>%
rename(end_users_cons = total_energy_consumed_by_end_users_in_the_swiss_controlblock_k_wh,
energy_prod = total_energy_production_swiss_controlblock_k_wh,
energy_cons = total_energy_consumption_swiss_controlblock_k_wh,
net_outflow = net_outflow_of_the_swiss_transmission_grid_k_wh,
grid_feed_in = grid_feed_in_swiss_transmission_grid_k_wh,
pos_secund = positive_secundary_control_energy_k_wh,
neg_secund = negative_secundary_control_energy_k_wh,
pos_tertiary = positive_tertiary_control_energy_k_wh,
neg_tertiary = negative_tertiary_control_energy_k_wh)
remove(bla)
for(i in 7:length(data_files)){
remove(paste0("Data_", 2008 + i))
}
remove(bla)
remove("bla")
remove(paste0("Data_", 2008 + 7))
paste0("Data_", 2015)
remove(paste0("Data_", 2015))
remove(get(paste0("Data_", 2015)))
paste0("Data_", 2015)
test <- paste0("Data_", 2015)
remove(test)
paste0("Data_", 2015)
remove("Data_2015")
remove(paste0("Data_", 2015))
typeof(paste0("Data_", 2015))
x <- paste0("Data_", 2015)
typeof(x)
remove(x)
remove(data_2015)
remove("data_2015")
remove("Data_2015")
paste0("Data_", 2015)
remove(paste0("Data_", 2015))
remove(as.character(paste0("Data_", 2015)))
remove(as.character(paste0("Data_", 2015)))
Data_to_remove <- list()
for(i in 1:10){
Data_to_remove <- append(i)
}
for(i in 1:10){
Data_to_remove <- append(Data_to_remove, i)
}
View(Data_to_remove)
Data_to_remove <- c()
for(i in 1:10){
Data_to_remove <- append(Data_to_remove, i)
}
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2008 + i))
Data_to_remove <- c()
for(i in 1:10){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2008 + i))
}
remove(list = Data_to_remove)
for(i in 7:length(data_files)){
remove(paste0("Data_", 2008 + i))
}
for(i in 1:10){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 20014 + i))
}
remove(list = Data_to_remove)
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
}
remove(list = Data_to_remove)
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
Data_to_remove <- append(Data_to_remove, paste0("OldData_", 2008 + i))
}
remove(list = Data_to_remove)
rm(list = lsf.str())
rm(list = lsf.str())
lsf.str()
help("lsf.str")
help("ls")
rm(list = ls.str(mode = 'numeric'))
remove(list = ls.str(mode = 'numeric'))
remove(list = ls.str(mode = 'all'))
remove(list = ls.str(mode = 'character'))
my_variables <- colnames(data_all) # all the variable
general_var <- my_variables[1:14] # general statistics (prod, cons, flow)
border_var <- my_variables[c(1:5, 15:25)] # exchange with borders statistics
price_var <- my_variables[c(1:5, 26:29)] # price of control
canton_var <- my_variables[c(1:5, 30:67)] # prod and cons per cantons
foreign_var <- my_variables[c(1:5, 68:69)] # out of Switzerland manage by SwissGrid
help("ls.str")
remove(list = ls.str(mode = 'Values'))
remove(list = ls.str(mode = 'values'))
remove(list = ls.str(mode = 'list'))
remove(list = ls.str(mode = 'character'))
source(file = here::here("Scripts/SetUp.R"))
data_files <- list.files(here::here("Data/SwissGrid"))
for(i in 1:6){
assign(paste0("OldData_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:(length(data_files)-2)){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = ymd_hms(Timestamp), .before = 1) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
data_all <- rbind(Data_2015, Data_2016, Data_2017, Data_2018, Data_2019,
Data_2020, Data_2021, Data_2022) %>% clean_names()
my_variables <- colnames(data_all) # all the variable
general_var <- my_variables[1:14] # general statistics (prod, cons, flow)
border_var <- my_variables[c(1:5, 15:25)] # exchange with borders statistics
price_var <- my_variables[c(1:5, 26:29)] # price of control
canton_var <- my_variables[c(1:5, 30:67)] # prod and cons per cantons
foreign_var <- my_variables[c(1:5, 68:69)] # out of Switzerland manage by SwissGrid
general_df <- data_all %>% select(all_of(general_var)) %>%
rename(end_users_cons = total_energy_consumed_by_end_users_in_the_swiss_controlblock_k_wh,
energy_prod = total_energy_production_swiss_controlblock_k_wh,
energy_cons = total_energy_consumption_swiss_controlblock_k_wh,
net_outflow = net_outflow_of_the_swiss_transmission_grid_k_wh,
grid_feed_in = grid_feed_in_swiss_transmission_grid_k_wh,
pos_secund = positive_secundary_control_energy_k_wh,
neg_secund = negative_secundary_control_energy_k_wh,
pos_tertiary = positive_tertiary_control_energy_k_wh,
neg_tertiary = negative_tertiary_control_energy_k_wh)
border_df <- data_all %>% select(all_of(border_var))
price_df <- data_all %>% select(all_of(price_var))
canton_df <- data_all %>% select(all_of(canton_var))
foreign_df <- data_all %>% select(all_of(foreign_var))
Data_to_remove <- c()
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
Data_to_remove <- append(Data_to_remove, paste0("OldData_", 2008 + i))
}
remove(list = Data_to_remove)
remove(list = ls.str(mode = c("numeric", "character")))
remove(list = ls.str(mode = c("character", "character")))
source(file = here::here("Scripts/SetUp.R"))
data_files <- list.files(here::here("Data/SwissGrid"))
data_all <- rbind(Data_2015, Data_2016, Data_2017, Data_2018, Data_2019,
Data_2020, Data_2021, Data_2022) %>% clean_names()
my_variables <- colnames(data_all) # all the variable
general_var <- my_variables[1:14] # general statistics (prod, cons, flow)
border_var <- my_variables[c(1:5, 15:25)] # exchange with borders statistics
price_var <- my_variables[c(1:5, 26:29)] # price of control
canton_var <- my_variables[c(1:5, 30:67)] # prod and cons per cantons
foreign_var <- my_variables[c(1:5, 68:69)] # out of Switzerland manage by SwissGrid
Data_to_remove <- c()
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
Data_to_remove <- append(Data_to_remove, paste0("OldData_", 2008 + i))
}
remove(list = Data_to_remove)
remove(list = ls.str(mode = c("numeric", "character")))
help(ls.str)
remove(list = ls.str(mode = "any"))
source(file = here::here("Scripts/SetUp.R"))
data_files <- list.files(here::here("Data/SwissGrid"))
for(i in 1:6){
assign(paste0("OldData_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:length(data_files)){
assign(paste0("Data_", 2008 + i),
read_excel(paste0("Data/SwissGrid/", data_files[i]),
sheet = "Zeitreihen0h15"))
}
for(i in 7:(length(data_files)-2)){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = ymd_hms(Timestamp), .before = 1) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
for(i in 13:(length(data_files))){
assign(paste0("Data_", 2008 + i),
mutate(get(paste0("Data_", 2008 + i)), Time = dmy_hm(Timestamp), .before = 1) %>%
mutate(Timestamp = Time) %>%
separate(Timestamp, c('Date', 'Hour'), sep = " ") %>%
mutate(Date = as.Date(Date, format = "%Y-%m-%d")) %>%
mutate(Month = as.Date(cut(Date, breaks = "months")),
Year = as.Date(cut(Date, breaks = "years"))) %>%
relocate(c(Year, Month), .after = Time))
}
data_all <- rbind(Data_2015, Data_2016, Data_2017, Data_2018, Data_2019,
Data_2020, Data_2021, Data_2022) %>% clean_names()
my_variables <- colnames(data_all) # all the variable
general_var <- my_variables[1:14] # general statistics (prod, cons, flow)
border_var <- my_variables[c(1:5, 15:25)] # exchange with borders statistics
price_var <- my_variables[c(1:5, 26:29)] # price of control
canton_var <- my_variables[c(1:5, 30:67)] # prod and cons per cantons
foreign_var <- my_variables[c(1:5, 68:69)] # out of Switzerland manage by SwissGrid
general_df <- data_all %>% select(all_of(general_var)) %>%
rename(end_users_cons = total_energy_consumed_by_end_users_in_the_swiss_controlblock_k_wh,
energy_prod = total_energy_production_swiss_controlblock_k_wh,
energy_cons = total_energy_consumption_swiss_controlblock_k_wh,
net_outflow = net_outflow_of_the_swiss_transmission_grid_k_wh,
grid_feed_in = grid_feed_in_swiss_transmission_grid_k_wh,
pos_secund = positive_secundary_control_energy_k_wh,
neg_secund = negative_secundary_control_energy_k_wh,
pos_tertiary = positive_tertiary_control_energy_k_wh,
neg_tertiary = negative_tertiary_control_energy_k_wh)
border_df <- data_all %>% select(all_of(border_var))
price_df <- data_all %>% select(all_of(price_var))
canton_df <- data_all %>% select(all_of(canton_var))
foreign_df <- data_all %>% select(all_of(foreign_var))
Data_to_remove <- c()
for(i in 1:8){
Data_to_remove <- append(Data_to_remove, paste0("Data_", 2014 + i))
Data_to_remove <- append(Data_to_remove, paste0("OldData_", 2008 + i))
}
remove(list = Data_to_remove)
# List all the objects in the environment
objects <- ls()
objects
# Remove all the objects except for the data
data <- ls()
# List all the objects in the environment
objects <- ls(c(7:16))
# List all the objects in the environment
objects <- ls()
# List all the objects in the environment
objects <- ls()[6:10]
remove(objects)
# Remove all the objects except for the data
data <- ls()
data
# List all the objects in the environment
objects <- ls()[7:]
# List all the objects in the environment
objects <- ls()[7:.]
# List all the objects in the environment
objects <- ls()[7:length(ls)]
# Remove all the objects except for the data
data <- ls()
objects <- setdiff(objects, data)
rm(list = objects)
objects
# List all the objects in the environment
objects <- ls()[7:10]
ls()
# List all the objects in the environment
remove(list = ls.str(mode = "character"))
remove(list = ls.str(mode = "numeric"))
View(border_df)
View(canton_df)
View(data_all)
View(foreign_df)
View(general_df)
View(price_df)
